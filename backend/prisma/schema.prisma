// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String    @id @default(uuid())
  username   String    @unique
  firstname  String
  lastname   String?
  email      String    @unique
  password   String
  avatar     String?   @default("https://ui-avatars.com/api/?background=random&name=User")
  biography  String?   @db.MediumText()
  location   String?
  website    String?
  phone      String?   @unique
  dob        DateTime
  gemas      Gemas[]
  lastLogin  DateTime? @default(now())
  createdAt  DateTime  @default(now())
  isVerified Boolean   @default(false)
  isActive   Boolean   @default(true)
  isAdmin    Boolean   @default(false)
  banner     String?   @default("https://picsum.photos/1200/300")

  RefreshTokens RefreshTokens[]
  likedGemas    GemaLikes[]
}

model RefreshTokens {
  id        String   @id @default(uuid())
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  token     String   @unique
  createdAt DateTime @default(now())
  expiredAt DateTime
}

model Gemas {
  id        String   @id @default(uuid())
  content   String   @db.MediumText()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Author
  authorId String
  author   Users  @relation(fields: [authorId], references: [id])

  // Repost / Thread
  parentId String?
  parent   Gemas?  @relation("ThreadParent", fields: [parentId], references: [id])
  replies  Gemas[] @relation("ThreadParent")

  // Media
  media Json? @default("[]") // ‚Üê array objek {type,url}

  // Engagement
  viewsCount   Int         @default(0)
  repliesCount Int         @default(0)
  repostCount  Int         @default(0)
  likedBy      GemaLikes[]
}

model GemaLikes {
  id        String   @id @default(uuid())
  userId    String
  user      Users    @relation(fields: [userId], references: [id])
  gemaId    String
  gema      Gemas    @relation(fields: [gemaId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, gemaId])
}
